import { PropType, EmitsOptions, ExtractPropTypes, VNode } from 'vue';
declare const _default: import("vue").DefineComponent<{
    overlay: {
        type: PropType<string | VNode<import("vue").RendererNode, import("vue").RendererElement, {
            [key: string]: any;
        }>>;
        default: string;
    };
    visible: {
        type: PropType<boolean>;
        default: boolean;
    };
    onChange: {
        type: PropType<(v: boolean) => void>;
        default: () => void;
    };
    relative: {
        type: PropType<string>;
        default: string;
    };
}, () => VNode<unknown, unknown, {
    [key: string]: any;
}>[], unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, EmitsOptions, string, import("vue").PublicProps, Readonly<ExtractPropTypes<{
    overlay: {
        type: PropType<string | VNode<import("vue").RendererNode, import("vue").RendererElement, {
            [key: string]: any;
        }>>;
        default: string;
    };
    visible: {
        type: PropType<boolean>;
        default: boolean;
    };
    onChange: {
        type: PropType<(v: boolean) => void>;
        default: () => void;
    };
    relative: {
        type: PropType<string>;
        default: string;
    };
}>>, {
    onChange: (v: boolean) => void;
    overlay: string | VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
    visible: boolean;
    relative: string;
}, {}>;
export default _default;
